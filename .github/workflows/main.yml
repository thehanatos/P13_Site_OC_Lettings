name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - '**'  # toutes les branches

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
          python3 -m pip install flake8 coverage

      - name: Debug environment
        run: |
          which python
          pip list

      - name: Run lint
        run: |
          flake8 .

      - name: Run tests with coverage
        run: |
          coverage erase
          coverage run -m pytest
          coverage report -m
          coverage html
          coverage json

      - name: Check coverage threshold
        run: |
          COVERAGE=$(coverage report | grep TOTAL | awk '{print $NF}' | tr -d '%')
          if [ "$COVERAGE" -lt 80 ]; then
            echo "Coverage $COVERAGE% is below 80%"
            exit 1
          fi

  build-push:
    needs: lint-test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract commit hash
        id: vars
        run: echo "HASH=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:${{ steps.vars.outputs.HASH }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:${{ steps.vars.outputs.HASH }} ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:latest

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:${{ steps.vars.outputs.HASH }}
          docker push ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:latest

  deploy:
    needs: build-push
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Render (or any other host)
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
